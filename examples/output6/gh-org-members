#!/bin/bash

# Constants
DEFAULT_ORG=""
CSV_FILE=""

# Functions

# Interactive selection of organization
select_organization() {
  orgs=$(gh org list --json | jq '.[].login' | tr -d '"')
  selected_org=$(echo "$orgs" | fzf)
  echo "$selected_org"
}

# Check if CSV file is provided or find the most recent one
check_csv_file() {
  if [[ -n $CSV_FILE ]]; then
    echo "Using provided CSV file: $CSV_FILE"
  else
    recent_csv=$(find ~/Downloads -name "*.csv" -regex ".*${DEFAULT_ORG}.*.csv" | sort -r | head -1)
    CSV_FILE="$recent_csv"
    echo "Using most recent CSV file: $CSV_FILE"
  fi
}

# Main script

# Parse command line options
while [[ "$#" -gt 0 ]]; do
  case "$1" in
    -c )
      CSV_FILE="$2"
      shift
      shift
      ;;
    -p )
      CSV_FILE="$2"
      shift
      shift
      ;;
    -o|--org )
      DEFAULT_ORG="$2"
      shift
      shift
      ;;
    --default )
      DEFAULT_ORG="$2"
      shift
      ;;
    -V|--version )
      echo "Version 1.0"
      exit 0
      ;;
    -f|--fullname )
      FULLNAME=true
      shift
      ;;
    -j|--json )
      JSON=true
      shift
      ;;
    -r|--regexp )
      REGEXP="$2"
      shift
      shift
      ;;
    -u|--url )
      URL=true
      shift
      ;;
    -l|--login )
      LOGIN=true
      shift
      ;;
    -w|--orgurl )
      ORG_URL=true
      shift
      ;;
    -s|--site )
      SITE=true
      shift
      ;;
    -h|--help )
      echo "Display help for command"
      exit 0
      ;;
    * )
      POSITIONAL+=($1)
      shift
      ;;
  esac
done

# If organization is not provided, interactively select from available orgs
if [[ -z "$DEFAULT_ORG" ]]; then
  DEFAULT_ORG=$(select_organization)
fi

# Check if CSV file is provided or find the most recent one
check_csv_file

# Use selected options to retrieve organization members
gh org members $DEFAULT_ORG --json > /tmp/org_members.json

# Merge with CSV data if CSV file provided
if [[ -n $CSV_FILE ]]; then
  jq -s --argfile csv <(jq -R 'reduce inputs as $$line ([{}]; .[0] + [[$$line]]) | .[0]' $CSV_FILE) '.[0] + .[1]' /tmp/org_members.json
fi
